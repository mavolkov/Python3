


from ftplib import *

ftp = FTP('192.168.43.193')
ftp.login('misha', '123456')

'''
host = input('Введите адрес сервера: ').strip()
login = input('Введите логин: ').strip()
password = input('Введите пароль: ').strip()
ftp = FTP(host)
ftp.login(login, password)
'''
'''
host = str(input(‘Host?: ‘))
ftp_user = str(input(‘User? :’))
ftp_password = str(input(‘Password? :’))
после чего каждую переменную подключим к авторизации: 
ftp = ftplib.FTP(host, ftp_user, ftp_password)
'''

print()
ftp.__class__.encoding = "utf-8"  # для отображения кириллицы
for i in ftp.nlst():
    print(i)


# print(ftp.getwelcome())  # приветственное сообщение

ftp.cwd('Рабочий стол')  # меняет директорию
try:
    ftp.mkd('New')  # создаем папку
except(error_perm):
    print('папка уже существует!')

# ftp.rmd('New')  # удаляем папку
# ftp.delete('Изображения/5.png')  # удаляем файл
# print(ftp.size('1.txt'))  # запрашиваем размер в байтах
# FTP.sendcmd(ftp.delete('1.txt'))  # отправка команды непосредственно на ftp-сервер внутри скобок


'''
ABOR — Прервать передачу файла
CDUP — Сменить директорию на вышестоящую
CWD — Сменить директорию
DELE — Удалить файл (DELE filename)
EPSV — Войти в расширенный пассивный режим. Применяется вместо PASV
HELP — Выводит список команд, принимаемых сервером
LIST — Возвращает список файлов директории. Список передаётся через соединение данных
MDTM — Возвращает время модификации файла
MKD — Создать директорию
NLST — Возвращает список файлов директории в более кратком формате, чем LIST. Список передаётся через соединение данных
NOOP — Пустая операция
PASS — Пароль
PASV — Войти в пассивный режим. Сервер вернёт адрес и порт, к которому нужно подключиться, чтобы забрать данные. Передача начнётся при введении следующих команд: RETR, LIST и т. д.
PORT — Войти в активный режим. Например PORT 12,34,45,56,78,89. В отличие от пассивного режима для передачи данных сервер сам подключается к клиенту
PWD — Возвращает текущую директорию
QUIT — Отключиться
REIN — Реинициализировать подключение
RETR — Скачать файл. Перед RETR должна быть команда PASV или PORT
RMD — Удалить директорию
RNFR и RNTO — Переименовать файл. RNFR — что переименовывать, RNTO — во что
SIZE — Возвращает размер файла
STOR — Закачать файл. Перед STOR должна быть команда PASV или PORT
SYST — Возвращает тип системы (UNIX, WIN, …)
TYPE — Установить тип передачи файла (бинарный, текстовый)
USER — Имя пользователя для входа на сервер

ftp.rename(‘Old_name’, ‘New_name’)
Ой, совсем забыл… а как же сохранять файлы в FTP и сливать оттуда? На помощь в загрузке НА FTP придет следующее:

storlines – используется для загрузки текстовых файлов: txt, html, rst и т.д.
    ftp.storlines(‘filename’)
storbinary – необходимо для загрузки бинарных файлов: pdf, xls и прочее
    ftp.storbinary(‘filenames’)
А для сохранения файла С FTP используем конструкцию:
with open(‘путь_к_каталогу_для_сохранения_файла’, ‘wb’) as f:
    ftp.retrbinary(‘RETR ‘ + ‘filename’, f.write)


'''





